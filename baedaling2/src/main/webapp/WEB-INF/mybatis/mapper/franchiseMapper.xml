<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="fc">
	<select id="seq" resultType="Integer">
		SELECT restaurants_seq.NEXTVAL FROM
		dual
	</select>
	<select id="readBoard" parameterType="Integer"
		resultType="com.bd.franchise.Franchise">
		SELECT r.restaurantsNum, TO_CHAR(openingHour, 'HH24:MI') openingHour,TO_CHAR(endingHour, 'HH24:MI') endingHour, fctel,
		mutualName,licenseNumber,introduce,origin, minorder,name,
		addr1, addr2, deliTime
		FROM restaurantsInfo if
		JOIN restaurants r ON if.restaurantsnum =
		r.restaurantsnum
		WHERE r.restaurantsNum = #{restaurantsNum}
	</select>

	<select id="listMenu" parameterType="Integer"
		resultType="com.bd.franchise.FranchiseMenu">
		SELECT menuNum, menuName, restaurantsNum, saveFilename,
		menucategoryNum, menuPrice
		FROM restaurantmenu
		WHERE restaurantsNum =
		#{restaurantsNum}
	</select>

	<select id="listCategory"
		resultType="com.bd.franchise.FranchiseMenu">
		SELECT menuCategoryNum, menuCategoryName
		FROM menuCategory
		ORDER BY menuCategoryNum
	</select>

	<select id="detailMenu" parameterType="Map"
		resultType="com.bd.franchise.FranchiseMenu">
		SELECT menuNum, menuName, restaurantsNum, saveFilename,
		menucategoryNum, menuPrice
		FROM restaurantmenu
		WHERE restaurantsNum =
		#{restaurantsNum} AND menuCategoryNum =
		#{menuCategoryNum}
	</select>

	<select id="readMenu" parameterType="Integer"
		resultType="com.bd.franchise.FranchiseMenu">
		SELECT menuNum, menuName, menuPrice,
		saveFilename,originalFilename, origin, menuInfo
		FROM restaurantmenu
		WHERE menuNum = #{menuNum}
	</select>

	<select id="reviewList" parameterType="map"
		resultType="com.bd.franchise.FranchiseReview">
		SELECT r.foodorderNum, r.content,
		TO_CHAR(r.created,'YY-MM-DD HH24:MI') created, starCount, reviewNum,
		u.userName, LISTAGG(menuName,',') WITHIN GROUP(ORDER BY
		f.foodorderNum)AS menuName,reply,replyCreated
		FROM review r
		JOIN foodorder f ON r.foodorderNum = f.foodorderNum
		JOIN orderdetail o ON o.foodorderNum = f.foodorderNum
		JOIN restaurantMenu rm ON rm.menuNum = o.menuNum
		JOIN user1 u ON r.userIdx = u.userIdx
		WHERE r.restaurantsNum = #{restaurantsNum}
		group by r.foodorderNum, r.content, TO_CHAR(r.created,'YY-MM-DD HH24:MI'),
		r.created, 'YY-MM-DD HH24:MI',
		starCount, reviewNum, u.userName, reply, replyCreated
		ORDER BY r.reviewNum DESC
		OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS
		ONLY
	</select>

	<select id="reviewCount" parameterType="Integer"
		resultType="Integer">
		SELECT NVL(COUNT(*),0)
		FROM review
		WHERE restaurantsNum = #{restaurantsNum}
	</select>

	<select id="aveStarCount" parameterType="Integer"
		resultType="Double">
		select AVG(STARCOUNT) AS aveStarCount from review where restaurantsNum =
		#{restaurantsNum}
	</select>

	<select id="reviewReplyCount" parameterType="Integer"
		resultType="Integer">
		SELECT COUNT(reply) FROM review WHERE restaurantsNum = #{restaurantsNum}
	</select>

	<select id="readmenuprice" parameterType="Integer" resultType="integer">
		SELECT menuprice FROM RESTAURANTMENU WHERE MENUNUM = #{menunum}
	</select>
	
	<select id="orderseq" resultType="Integer">
		SELECT foodOrder_seq.NEXTVAL FROM dual
	</select>
	
	<insert id="insertorder" parameterType="com.bd.franchise.Franchise">
		INSERT INTO foodOrder(FOODORDERNUM,FOODORDERDATE,FOODORDERTOTALPRICE,FOODORDERPAY,FOODORDERSTATE,FOODORDERADDR,DETAILADDR,FOODORDERDELIVERYMETHOD,FOODORDERHOWPAY,FOODORDERPAYCOMPLETIONDATE,MEMO,USERIDX,RESTAURANTSNUM,TEL)
		VALUES (#{foodordernum},SYSDATE,#{foodordertotalprice},#{foodorderpay},'주문완료',#{addr1},#{addr2},#{foodorderdeliverymethod},#{foodorderhowpay},SYSDATE,#{memo},#{userIdx},#{restaurantsNum},#{tel})	   
	</insert>
	
	<select id="detailseq" resultType="Integer">
		SELECT orderdetail_seq.NEXTVAL FROM dual 
	</select>
	
	<insert id="insertdetailorder" parameterType="map">
		INSERT INTO orderdetail (ORDERDETAILNUM,FOODORDERNUM,MENUNUM,ORDERONEPRICE,QTY) VALUES(#{orderdetailnum},#{foodordernum},#{menunum},#{orderoneprice},#{qty})
	</insert>
	
	<select id="readimage1" parameterType="Integer" resultType="String">
		SELECT SAVEFILENAME FROM restaurantfile WHERE RESTAURANTSNUM = #{restaurantsNum} AND SEPARATE = 1
	</select>
	<select id="readimage2" parameterType="Integer" resultType="String">
		SELECT SAVEFILENAME FROM restaurantfile WHERE RESTAURANTSNUM = #{restaurantsNum} AND SEPARATE = 2
	</select>
</mapper>